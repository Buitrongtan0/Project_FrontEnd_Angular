{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport class LoginPageComponent {\n  constructor() {\n    this.passwordHidden = true;\n  }\n  ngOnInit() {\n    this.createLoginForm();\n  }\n  createLoginForm() {\n    this.loginForm = this.formBuilder.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n  login() {\n    console.log(`! ~ file: login-page.component.ts ~ line 42 ~ this.loginForm.valid`, this.loginForm.valid);\n    console.log(`! ~ file: login-page.component.ts ~ line 49 ~ ...this.loginForm.value`, this.loginForm.value);\n    if (!this.loginForm.valid) {\n      return;\n    }\n    // let loginModel: LoginModel = { ...this.loginForm.value };\n    // this.authService.login(loginModel).subscribe(\n    //   (response) => {\n    //     this.localStorageService.set('tokenModel', response.data);\n    //     this.localStorageService.set(\n    //       'userMail',\n    //       this.loginForm.get('email')?.value\n    //     );\n    //     this.getUserDetailByEmail(this.loginForm.get('email')?.value);\n    //     this.toastrService.info(response.message);\n    //     this.router.navigateByUrl('');\n    //   },\n    //   (errorResponse) => this.toastrService.error(errorResponse.error)\n    // );\n  }\n\n  getUserDetailByEmail(mail) {\n    // this.userService.getUserDetailByEmail(mail).subscribe((response) => {\n    //   this.authService.setUserDetail(response.data);\n    // });\n  }\n  togglePasswordHidden() {\n    this.passwordHidden = !this.passwordHidden;\n  }\n  isPasswordHidden() {\n    return this.passwordHidden ? 'password' : 'text';\n  }\n  isPasswordHiddenIcon() {\n    return this.passwordHidden ? 'fa-eye-slash' : 'fa-eye text-primary';\n  }\n  static {\n    this.ɵfac = function LoginPageComponent_Factory(t) {\n      return new (t || LoginPageComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginPageComponent,\n      selectors: [[\"app-login-page\"]],\n      decls: 27,\n      vars: 4,\n      consts: [[1, \"container\"], [1, \"row\"], [1, \"col-md\", \"my-auto\"], [1, \"fw-bold\", \"mb-5\"], [3, \"formGroup\"], [1, \"mb-3\"], [\"for\", \"email-input\", 1, \"form-label\"], [1, \"input-group\", \"has-validation\"], [\"formControlName\", \"email\", \"type\", \"email\", \"id\", \"email-input\", \"placeholder\", \"name@example.com\", 1, \"form-control\", 3, \"ngClass\"], [1, \"invalid-feedback\"], [1, \"btn\", \"btn-primary\", \"btn-lg\", \"rounded-1\", \"shadow-xl\", \"w-100\", 3, \"click\"], [1, \"d-flex\", \"mt-5\"], [1, \"my-auto\", \"text-secondary\", \"me-2\"], [\"routerLink\", \"/signup\", 1, \"btn\", \"btn-outline-success\", \"rounded-3\"], [1, \"col-md\", \"d-none\", \"d-md-block\", \"my-auto\"], [1, \"display-6\", \"fw-light\", \"text-secondary\", \"text-center\", \"mb-5\"], [\"id\", \"car-image\", \"src\", \"../../../../assets/images/white-car-2.png\", 1, \"img-fluid\"], [\"href\", \"https://www.freepik.com/vectors/background\", 1, \"d-none\"]],\n      template: function LoginPageComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h1\", 3);\n          i0.ɵɵtext(4, \"Log in\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"form\", 4)(6, \"div\", 5)(7, \"label\", 6);\n          i0.ɵɵtext(8, \"Enter your email address\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"div\", 7);\n          i0.ɵɵelement(10, \"input\", 8);\n          i0.ɵɵelementStart(11, \"div\", 9);\n          i0.ɵɵtext(12, \"Please enter your email.\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelement(13, \"div\", 5);\n          i0.ɵɵelementStart(14, \"button\", 10);\n          i0.ɵɵlistener(\"click\", function LoginPageComponent_Template_button_click_14_listener() {\n            return ctx.login();\n          });\n          i0.ɵɵtext(15, \" Log in \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(16, \"div\", 11)(17, \"p\", 12);\n          i0.ɵɵtext(18, \"If you are not signed up yet\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"a\", 13);\n          i0.ɵɵtext(20, \"Sign up now\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(21, \"div\", 14)(22, \"h1\", 15);\n          i0.ɵɵtext(23, \" Nice to see you again \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(24, \"img\", 16);\n          i0.ɵɵelementStart(25, \"a\", 17);\n          i0.ɵɵtext(26, \"Background vector created by rawpixel.com - www.freepik.com\");\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(2, _c0, ctx.loginForm.controls[\"email\"].errors && (ctx.loginForm.controls[\"email\"].touched || ctx.loginForm.controls[\"email\"].dirty)));\n        }\n      },\n      dependencies: [i1.NgClass, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i3.RouterLink],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["Validators","LoginPageComponent","constructor","passwordHidden","ngOnInit","createLoginForm","loginForm","formBuilder","group","email","required","password","login","console","log","valid","value","getUserDetailByEmail","mail","togglePasswordHidden","isPasswordHidden","isPasswordHiddenIcon","selectors","decls","vars","consts","template","LoginPageComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","LoginPageComponent_Template_button_click_14_listener","ɵɵadvance","ɵɵproperty","ɵɵpureFunction1","_c0","controls","errors","touched","dirty"],"sources":["D:\\Anguilar\\project-website\\src\\app\\components\\page\\login-page\\login-page.component.ts","D:\\Anguilar\\project-website\\src\\app\\components\\page\\login-page\\login-page.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.scss']\n})\nexport class LoginPageComponent {\n  loginForm!: FormGroup;\n\n  passwordHidden: boolean = true;\n  formBuilder: any;\n\n  ngOnInit(): void {\n    this.createLoginForm();\n  }\n\n  createLoginForm() {\n    this.loginForm = this.formBuilder.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required],\n    });\n  }\n\n  login() {\n    console.log(\n      `! ~ file: login-page.component.ts ~ line 42 ~ this.loginForm.valid`,\n      this.loginForm.valid\n    );\n    console.log(\n      `! ~ file: login-page.component.ts ~ line 49 ~ ...this.loginForm.value`,\n      this.loginForm.value\n    );\n    if (!this.loginForm.valid) {\n      return;\n    }\n    // let loginModel: LoginModel = { ...this.loginForm.value };\n\n    // this.authService.login(loginModel).subscribe(\n    //   (response) => {\n    //     this.localStorageService.set('tokenModel', response.data);\n    //     this.localStorageService.set(\n    //       'userMail',\n    //       this.loginForm.get('email')?.value\n    //     );\n    //     this.getUserDetailByEmail(this.loginForm.get('email')?.value);\n    //     this.toastrService.info(response.message);\n    //     this.router.navigateByUrl('');\n    //   },\n    //   (errorResponse) => this.toastrService.error(errorResponse.error)\n    // );\n  }\n\n  getUserDetailByEmail(mail: string) {\n    // this.userService.getUserDetailByEmail(mail).subscribe((response) => {\n    //   this.authService.setUserDetail(response.data);\n    // });\n  }\n\n  togglePasswordHidden() {\n    this.passwordHidden = !this.passwordHidden;\n  }\n\n  isPasswordHidden(): string {\n    return this.passwordHidden ? 'password' : 'text';\n  }\n\n  isPasswordHiddenIcon(): string {\n    return this.passwordHidden ? 'fa-eye-slash' : 'fa-eye text-primary';\n  }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md my-auto\">\n        <h1 class=\"fw-bold mb-5\">Log in</h1>\n        <form [formGroup]=\"loginForm\">\n          <div class=\"mb-3\">\n            <label for=\"email-input\" class=\"form-label\"\n              >Enter your email address</label\n            >\n            <div class=\"input-group has-validation\">\n              <input\n                formControlName=\"email\"\n                type=\"email\"\n                class=\"form-control\"\n                [ngClass]=\"{\n                  'is-invalid':\n                    loginForm.controls['email'].errors &&\n                    (loginForm.controls['email'].touched ||\n                      loginForm.controls['email'].dirty)\n                }\"\n                id=\"email-input\"\n                placeholder=\"name@example.com\"\n              />\n              <div class=\"invalid-feedback\">Please enter your email.</div>\n            </div>\n          </div>\n  \n          <div class=\"mb-3\">\n            <!-- <app-password-input\n              formControlName=\"password\"\n              [errors]=\"loginForm.controls['password'].errors\"\n              [touched]=\"loginForm.controls['password'].touched\"\n              [dirty]=\"loginForm.controls['password'].dirty\"\n            ></app-password-input> -->\n          </div>\n  \n          <button\n            (click)=\"login()\"\n            class=\"btn btn-primary btn-lg rounded-1 shadow-xl w-100\"\n          >\n            Log in\n          </button>\n        </form>\n  \n        <div class=\"d-flex mt-5\">\n          <p class=\"my-auto text-secondary me-2\">If you are not signed up yet</p>\n          <a routerLink=\"/signup\" class=\"btn btn-outline-success rounded-3\"\n            >Sign up now</a\n          >\n        </div>\n      </div>\n  \n      <div class=\"col-md d-none d-md-block my-auto\">\n        <h1 class=\"display-6 fw-light text-secondary text-center mb-5\">\n          Nice to see you again\n        </h1>\n        <img\n          id=\"car-image\"\n          class=\"img-fluid\"\n          src=\"../../../../assets/images/white-car-2.png\"\n        />\n        <a class=\"d-none\" href=\"https://www.freepik.com/vectors/background\"\n          >Background vector created by rawpixel.com - www.freepik.com</a\n        >\n      </div>\n    </div>\n  </div>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}