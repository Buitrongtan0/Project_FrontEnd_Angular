{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../../password-input/password-input.component\";\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport class LoginPageComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.passwordHidden = true;\n  }\n  ngOnInit() {\n    this.createLoginForm();\n  }\n  createLoginForm() {\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n  login() {\n    if (!this.loginForm.valid) {\n      return;\n    }\n    // let loginModel: LoginModel = { ...this.loginForm.value };\n    // this.authService.login(loginModel).subscribe(\n    //   (response) => {\n    //     this.localStorageService.set('tokenModel', response.data);\n    //     this.localStorageService.set(\n    //       'userMail',\n    //       this.loginForm.get('email')?.value\n    //     );\n    //     this.getUserDetailByEmail(this.loginForm.get('email')?.value);\n    //     this.toastrService.info(response.message);\n    //     this.router.navigateByUrl('');\n    //   },\n    //   (errorResponse) => this.toastrService.error(errorResponse.error)\n    // );\n  }\n\n  getUserDetailByEmail(mail) {\n    // this.userService.getUserDetailByEmail(mail).subscribe((response) => {\n    //   this.authService.setUserDetail(response.data);\n    // });\n  }\n  togglePasswordHidden() {\n    this.passwordHidden = !this.passwordHidden;\n  }\n  isPasswordHidden() {\n    return this.passwordHidden ? 'password' : 'text';\n  }\n  isPasswordHiddenIcon() {\n    return this.passwordHidden ? 'fa-eye-slash' : 'fa-eye text-primary';\n  }\n  static {\n    this.ɵfac = function LoginPageComponent_Factory(t) {\n      return new (t || LoginPageComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginPageComponent,\n      selectors: [[\"app-login-page\"]],\n      decls: 25,\n      vars: 7,\n      consts: [[1, \"container\"], [1, \"row\"], [1, \"col-md\", \"my-auto\"], [1, \"fw-bold\", \"mb-5\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"email-input\", 1, \"form-label\"], [1, \"input-group\", \"has-validation\"], [\"formControlName\", \"email\", \"type\", \"email\", \"id\", \"email-input\", \"placeholder\", \"name@example.com\", 1, \"form-control\", 3, \"ngClass\"], [1, \"invalid-feedback\"], [\"formControlName\", \"password\", 3, \"errors\", \"touched\", \"dirty\"], [1, \"btn\", \"btn-primary\", \"btn-lg\", \"rounded-1\", \"shadow-xl\", \"w-100\", 3, \"click\"], [1, \"d-flex\", \"mt-5\"], [1, \"my-auto\", \"text-secondary\", \"me-2\"], [\"routerLink\", \"/signup\", 1, \"btn\", \"btn-outline-success\", \"rounded-3\"], [1, \"col-md\", \"d-none\", \"d-md-block\", \"my-auto\"], [1, \"display-6\", \"fw-light\", \"text-secondary\", \"text-center\", \"mb-5\"]],\n      template: function LoginPageComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h1\", 3);\n          i0.ɵɵtext(4, \"Log in\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"form\", 4);\n          i0.ɵɵlistener(\"ngSubmit\", function LoginPageComponent_Template_form_ngSubmit_5_listener() {\n            return ctx.login();\n          });\n          i0.ɵɵelementStart(6, \"div\", 5)(7, \"label\", 6);\n          i0.ɵɵtext(8, \"Enter your email address\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"div\", 7);\n          i0.ɵɵelement(10, \"input\", 8);\n          i0.ɵɵelementStart(11, \"div\", 9);\n          i0.ɵɵtext(12, \"Please enter your email.\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(13, \"div\", 5);\n          i0.ɵɵelement(14, \"app-password-input\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"button\", 11);\n          i0.ɵɵlistener(\"click\", function LoginPageComponent_Template_button_click_15_listener() {\n            return ctx.login();\n          });\n          i0.ɵɵtext(16, \" Log in \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(17, \"div\", 12)(18, \"p\", 13);\n          i0.ɵɵtext(19, \"If you are not signed up yet\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"a\", 14);\n          i0.ɵɵtext(21, \"Sign up now\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(22, \"div\", 15)(23, \"h1\", 16);\n          i0.ɵɵtext(24, \" Nice to see you again \");\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c0, ctx.loginForm.controls[\"email\"].errors && (ctx.loginForm.controls[\"email\"].touched || ctx.loginForm.controls[\"email\"].dirty)));\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"errors\", ctx.loginForm.controls[\"password\"].errors)(\"touched\", ctx.loginForm.controls[\"password\"].touched)(\"dirty\", ctx.loginForm.controls[\"password\"].dirty);\n        }\n      },\n      dependencies: [i2.NgClass, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i3.RouterLink, i4.PasswordInputComponent],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["Validators","LoginPageComponent","constructor","fb","passwordHidden","ngOnInit","createLoginForm","loginForm","group","email","required","password","login","valid","getUserDetailByEmail","mail","togglePasswordHidden","isPasswordHidden","isPasswordHiddenIcon","i0","ɵɵdirectiveInject","i1","FormBuilder","selectors","decls","vars","consts","template","LoginPageComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginPageComponent_Template_form_ngSubmit_5_listener","ɵɵelement","LoginPageComponent_Template_button_click_15_listener","ɵɵadvance","ɵɵproperty","ɵɵpureFunction1","_c0","controls","errors","touched","dirty"],"sources":["D:\\Anguilar\\project-website\\src\\app\\components\\page\\login-page\\login-page.component.ts","D:\\Anguilar\\project-website\\src\\app\\components\\page\\login-page\\login-page.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.scss']\n})\nexport class LoginPageComponent {\n  loginForm!: FormGroup;\n\n  passwordHidden: boolean = true;\n  \n  constructor(private fb: FormBuilder){}\n\n  ngOnInit(): void {\n    this.createLoginForm();\n  }\n\n  createLoginForm() {\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n\n  login() {\n    if (!this.loginForm.valid) {\n      return;\n    }\n    // let loginModel: LoginModel = { ...this.loginForm.value };\n\n    // this.authService.login(loginModel).subscribe(\n    //   (response) => {\n    //     this.localStorageService.set('tokenModel', response.data);\n    //     this.localStorageService.set(\n    //       'userMail',\n    //       this.loginForm.get('email')?.value\n    //     );\n    //     this.getUserDetailByEmail(this.loginForm.get('email')?.value);\n    //     this.toastrService.info(response.message);\n    //     this.router.navigateByUrl('');\n    //   },\n    //   (errorResponse) => this.toastrService.error(errorResponse.error)\n    // );\n  }\n\n  getUserDetailByEmail(mail: string) {\n    // this.userService.getUserDetailByEmail(mail).subscribe((response) => {\n    //   this.authService.setUserDetail(response.data);\n    // });\n  }\n\n  togglePasswordHidden() {\n    this.passwordHidden = !this.passwordHidden;\n  }\n\n  isPasswordHidden(): string {\n    return this.passwordHidden ? 'password' : 'text';\n  }\n\n  isPasswordHiddenIcon(): string {\n    return this.passwordHidden ? 'fa-eye-slash' : 'fa-eye text-primary';\n  }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md my-auto\">\n        <h1 class=\"fw-bold mb-5\">Log in</h1>\n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\n          <div class=\"mb-3\">\n            <label for=\"email-input\" class=\"form-label\"\n              >Enter your email address</label\n            >\n            <div class=\"input-group has-validation\">\n              <input\n                formControlName=\"email\"\n                type=\"email\"\n                class=\"form-control\"\n                [ngClass]=\"{\n                  'is-invalid':\n                    loginForm.controls['email'].errors &&\n                    (loginForm.controls['email'].touched ||\n                      loginForm.controls['email'].dirty)\n                }\"\n                id=\"email-input\"\n                placeholder=\"name@example.com\"\n              />\n              <div class=\"invalid-feedback\">Please enter your email.</div>\n            </div>\n          </div>\n  \n          <div class=\"mb-3\">\n            <app-password-input\n              formControlName=\"password\"\n              [errors]=\"loginForm.controls['password'].errors\"\n              [touched]=\"loginForm.controls['password'].touched\"\n              [dirty]=\"loginForm.controls['password'].dirty\"\n            ></app-password-input>\n          </div>\n  \n          <button\n            (click)=\"login()\"\n            class=\"btn btn-primary btn-lg rounded-1 shadow-xl w-100\"\n          >\n            Log in\n          </button>\n        </form>\n  \n        <div class=\"d-flex mt-5\">\n          <p class=\"my-auto text-secondary me-2\">If you are not signed up yet</p>\n          <a routerLink=\"/signup\" class=\"btn btn-outline-success rounded-3\"\n            >Sign up now</a\n          >\n        </div>\n      </div>\n  \n      <div class=\"col-md d-none d-md-block my-auto\">\n        <h1 class=\"display-6 fw-light text-secondary text-center mb-5\">\n          Nice to see you again\n        </h1>\n        <!-- <img\n          id=\"car-image\"\n          class=\"img-fluid\"\n          src=\"../../../../assets/images/white-car-2.png\"\n        /> -->\n\n      </div>\n    </div>\n  </div>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}