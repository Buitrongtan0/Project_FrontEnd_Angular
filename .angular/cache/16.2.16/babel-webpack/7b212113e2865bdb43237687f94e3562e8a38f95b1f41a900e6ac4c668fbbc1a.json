{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/user.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"src/app/services/local-storage.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"../../password-input/password-input.component\";\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport let LoginPageComponent = /*#__PURE__*/(() => {\n  class LoginPageComponent {\n    constructor(fb, userService, router, localStorageService) {\n      this.fb = fb;\n      this.userService = userService;\n      this.router = router;\n      this.localStorageService = localStorageService;\n      this.passwordHidden = true;\n    }\n    ngOnInit() {\n      this.createLoginForm();\n    }\n    createLoginForm() {\n      this.loginForm = this.fb.group({\n        email: ['', [Validators.required, Validators.email]],\n        password: ['', Validators.required]\n      });\n    }\n    login() {\n      if (!this.loginForm.valid) {\n        return;\n      }\n      let loginModel = {\n        ...this.loginForm.value\n      };\n      this.userService.getLogin(loginModel).subscribe(response => {\n        if (response.errCode === 0) {\n          this.localStorageService.setItem('user', {\n            login: true,\n            name: response.user.firstName\n          });\n          this.router.navigate(['/']);\n        }\n      }, errorResponse => {\n        // this.toastrService.error(errorResponse.error)\n      });\n    }\n    togglePasswordHidden() {\n      this.passwordHidden = !this.passwordHidden;\n    }\n    isPasswordHidden() {\n      return this.passwordHidden ? 'password' : 'text';\n    }\n    isPasswordHiddenIcon() {\n      return this.passwordHidden ? 'fa-eye-slash' : 'fa-eye text-primary';\n    }\n    static {\n      this.ɵfac = function LoginPageComponent_Factory(t) {\n        return new (t || LoginPageComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.LocalStorageService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: LoginPageComponent,\n        selectors: [[\"app-login-page\"]],\n        decls: 26,\n        vars: 7,\n        consts: [[1, \"container\"], [1, \"row\"], [1, \"col-md\", \"my-auto\"], [1, \"fw-bold\", \"mb-5\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"email-input\", 1, \"form-label\"], [1, \"input-group\", \"has-validation\"], [\"formControlName\", \"email\", \"type\", \"email\", \"id\", \"email-input\", \"placeholder\", \"name@example.com\", 1, \"form-control\", 3, \"ngClass\"], [1, \"invalid-feedback\"], [\"formControlName\", \"password\", 3, \"errors\", \"touched\", \"dirty\"], [1, \"btn\", \"btn-primary\", \"btn-lg\", \"rounded-1\", \"shadow-xl\", \"w-100\", 3, \"click\"], [1, \"d-flex\", \"mt-5\"], [1, \"my-auto\", \"text-secondary\", \"me-2\"], [\"routerLink\", \"/signup\", 1, \"btn\", \"btn-outline-success\", \"rounded-3\"], [1, \"col-md\", \"d-none\", \"d-md-block\", \"my-auto\"], [1, \"display-6\", \"fw-light\", \"text-secondary\", \"text-center\", \"mb-5\"], [\"src\", \"assets\\\\img\\\\img1.png_wh860.png\", 1, \"img-fluid\"]],\n        template: function LoginPageComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h1\", 3);\n            i0.ɵɵtext(4, \"Log in\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(5, \"form\", 4);\n            i0.ɵɵlistener(\"ngSubmit\", function LoginPageComponent_Template_form_ngSubmit_5_listener() {\n              return ctx.login();\n            });\n            i0.ɵɵelementStart(6, \"div\", 5)(7, \"label\", 6);\n            i0.ɵɵtext(8, \"Enter your email address\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(9, \"div\", 7);\n            i0.ɵɵelement(10, \"input\", 8);\n            i0.ɵɵelementStart(11, \"div\", 9);\n            i0.ɵɵtext(12, \"Please enter your email.\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(13, \"div\", 5);\n            i0.ɵɵelement(14, \"app-password-input\", 10);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(15, \"button\", 11);\n            i0.ɵɵlistener(\"click\", function LoginPageComponent_Template_button_click_15_listener() {\n              return ctx.login();\n            });\n            i0.ɵɵtext(16, \" Log in \");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(17, \"div\", 12)(18, \"p\", 13);\n            i0.ɵɵtext(19, \"If you are not signed up yet\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(20, \"a\", 14);\n            i0.ɵɵtext(21, \"Sign up now\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(22, \"div\", 15)(23, \"h1\", 16);\n            i0.ɵɵtext(24, \" Nice to see you again \");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(25, \"img\", 17);\n            i0.ɵɵelementEnd()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c0, ctx.loginForm.controls[\"email\"].errors && (ctx.loginForm.controls[\"email\"].touched || ctx.loginForm.controls[\"email\"].dirty)));\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"errors\", ctx.loginForm.controls[\"password\"].errors)(\"touched\", ctx.loginForm.controls[\"password\"].touched)(\"dirty\", ctx.loginForm.controls[\"password\"].dirty);\n          }\n        },\n        dependencies: [i5.NgClass, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i3.RouterLink, i6.PasswordInputComponent]\n      });\n    }\n  }\n  return LoginPageComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}