{"ast":null,"code":"import { forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport class PasswordInputComponent {\n  constructor() {\n    this.id = 'password-input';\n    this.label = 'Enter your password';\n    this.invalidFeedback = 'Please enter your password.';\n    this.passwordHidden = true;\n    this.value = '';\n    this.onChange = () => {};\n    this.onTouched = () => {};\n    this.disabled = false;\n  }\n  ngOnInit() {}\n  writeValue(value) {\n    this.value = value;\n  }\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n  togglePasswordHidden() {\n    this.passwordHidden = !this.passwordHidden;\n  }\n  isPasswordHidden() {\n    return this.passwordHidden ? 'password' : 'text';\n  }\n  isPasswordHiddenIcon() {\n    return this.passwordHidden ? 'fa-eye-slash' : 'fa-eye text-primary';\n  }\n  static {\n    this.ɵfac = function PasswordInputComponent_Factory(t) {\n      return new (t || PasswordInputComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: PasswordInputComponent,\n      selectors: [[\"app-password-input\"]],\n      hostBindings: function PasswordInputComponent_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"change\", function PasswordInputComponent_change_HostBindingHandler($event) {\n            return ctx.onChange($event.target.value);\n          })(\"input\", function PasswordInputComponent_input_HostBindingHandler($event) {\n            return ctx.onChange($event.target.value);\n          })(\"blur\", function PasswordInputComponent_blur_HostBindingHandler() {\n            return ctx.onTouched();\n          });\n        }\n      },\n      inputs: {\n        id: \"id\",\n        label: \"label\",\n        invalidFeedback: \"invalidFeedback\",\n        errors: \"errors\",\n        touched: \"touched\",\n        dirty: \"dirty\"\n      },\n      features: [i0.ɵɵProvidersFeature([{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => PasswordInputComponent),\n        multi: true\n      }])],\n      decls: 10,\n      vars: 13,\n      consts: [[1, \"form-label\", 3, \"for\"], [1, \"input-group\", \"has-validation\"], [\"placeholder\", \"***********\", 1, \"form-control\", 3, \"type\", \"id\", \"disabled\", \"ngClass\"], [1, \"input-group-text\", \"cursor-pointer\", 3, \"click\"], [\"aria-hidden\", \"true\"], [1, \"invalid-feedback\"]],\n      template: function PasswordInputComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"label\", 0);\n          i0.ɵɵtext(1);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"div\", 1);\n          i0.ɵɵelement(3, \"input\", 2);\n          i0.ɵɵelementStart(4, \"div\", 3);\n          i0.ɵɵlistener(\"click\", function PasswordInputComponent_Template_div_click_4_listener() {\n            return ctx.togglePasswordHidden();\n          });\n          i0.ɵɵelement(5, \"i\", 4);\n          i0.ɵɵelementStart(6, \"pre\");\n          i0.ɵɵtext(7);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(8, \"div\", 5);\n          i0.ɵɵtext(9);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"for\", ctx.id);\n          i0.ɵɵadvance(1);\n          i0.ɵɵtextInterpolate(ctx.label);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"type\", ctx.isPasswordHidden())(\"id\", ctx.id)(\"disabled\", ctx.disabled)(\"ngClass\", i0.ɵɵpureFunction1(11, _c0, ctx.errors && (ctx.touched || ctx.dirty)));\n          i0.ɵɵadvance(2);\n          i0.ɵɵclassMapInterpolate1(\"fa \", ctx.isPasswordHiddenIcon(), \"\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate(ctx.isPasswordHiddenIcon());\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate(ctx.invalidFeedback);\n        }\n      },\n      dependencies: [i1.NgClass],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["forwardRef","NG_VALUE_ACCESSOR","PasswordInputComponent","constructor","id","label","invalidFeedback","passwordHidden","value","onChange","onTouched","disabled","ngOnInit","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","togglePasswordHidden","isPasswordHidden","isPasswordHiddenIcon","selectors","hostBindings","PasswordInputComponent_HostBindings","rf","ctx","$event","target","PasswordInputComponent_input_HostBindingHandler","PasswordInputComponent_blur_HostBindingHandler","provide","useExisting","multi","decls","vars","consts","template","PasswordInputComponent_Template","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","PasswordInputComponent_Template_div_click_4_listener","ɵɵproperty","ɵɵadvance","ɵɵtextInterpolate","ɵɵpureFunction1","_c0","errors","touched","dirty","ɵɵclassMapInterpolate1"],"sources":["D:\\Anguilar\\project-website\\src\\app\\components\\password-input\\password-input.component.ts","D:\\Anguilar\\project-website\\src\\app\\components\\password-input\\password-input.component.html"],"sourcesContent":["import { Component, forwardRef, Input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n  selector: 'app-password-input',\n  templateUrl: './password-input.component.html',\n  styleUrls: ['./password-input.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PasswordInputComponent),\n      multi: true,\n    },\n  ],\n  host: {\n    '(change)': 'onChange($event.target.value)',\n    '(input)': 'onChange($event.target.value)',\n    '(blur)': 'onTouched()',\n  },\n})\nexport class PasswordInputComponent {\n  @Input() id: string = 'password-input';\n  @Input() label: string = 'Enter your password';\n  @Input() invalidFeedback: string = 'Please enter your password.';\n  passwordHidden: boolean = true;\n  value: string = '';\n  onChange: any = () => {};\n  onTouched: any = () => {};\n  disabled = false;\n\n  @Input() errors: any;\n  @Input() touched: any;\n  @Input() dirty: any;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  writeValue(value: string): void {\n    this.value = value;\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  togglePasswordHidden() {\n    this.passwordHidden = !this.passwordHidden;\n  }\n\n  isPasswordHidden(): string {\n    return this.passwordHidden ? 'password' : 'text';\n  }\n\n  isPasswordHiddenIcon(): string {\n    return this.passwordHidden ? 'fa-eye-slash' : 'fa-eye text-primary';\n  }\n}\n","<label [for]=\"id\" class=\"form-label\">{{ label }}</label>\n<div class=\"input-group has-validation\">\n  <input\n    [type]=\"isPasswordHidden()\"\n    [id]=\"id\"\n    [disabled]=\"disabled\"\n    class=\"form-control\"\n    [ngClass]=\"{\n      'is-invalid': errors && (touched || dirty)\n    }\"\n    placeholder=\"***********\"\n  />\n\n  <div (click)=\"togglePasswordHidden()\" class=\"input-group-text cursor-pointer\">\n    <i class=\"fa {{ isPasswordHiddenIcon() }}\" aria-hidden=\"true\"></i>\n    <pre>{{isPasswordHiddenIcon()}}</pre>\n  </div>\n  <div class=\"invalid-feedback\">{{ invalidFeedback }}</div>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}